// Code generated by MockGen. DO NOT EDIT.
// Source: /home/alyx/code/VoidMesh/api/api/proto/resource_node/v1/resource_node_grpc.pb.go
//
// Generated by this command:
//
//	mockgen -source=/home/alyx/code/VoidMesh/api/api/proto/resource_node/v1/resource_node_grpc.pb.go -destination=/home/alyx/code/VoidMesh/api/api/internal/testmocks/grpc/mock_resource_node_service.go -package=mockgrpc
//

// Package mockgrpc is a generated GoMock package.
package mockgrpc

import (
	context "context"
	reflect "reflect"

	v1 "github.com/VoidMesh/api/api/proto/resource_node/v1"
	gomock "go.uber.org/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockResourceNodeServiceClient is a mock of ResourceNodeServiceClient interface.
type MockResourceNodeServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockResourceNodeServiceClientMockRecorder
	isgomock struct{}
}

// MockResourceNodeServiceClientMockRecorder is the mock recorder for MockResourceNodeServiceClient.
type MockResourceNodeServiceClientMockRecorder struct {
	mock *MockResourceNodeServiceClient
}

// NewMockResourceNodeServiceClient creates a new mock instance.
func NewMockResourceNodeServiceClient(ctrl *gomock.Controller) *MockResourceNodeServiceClient {
	mock := &MockResourceNodeServiceClient{ctrl: ctrl}
	mock.recorder = &MockResourceNodeServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceNodeServiceClient) EXPECT() *MockResourceNodeServiceClientMockRecorder {
	return m.recorder
}

// GetResourceNodeTypes mocks base method.
func (m *MockResourceNodeServiceClient) GetResourceNodeTypes(ctx context.Context, in *v1.GetResourceNodeTypesRequest, opts ...grpc.CallOption) (*v1.GetResourceNodeTypesResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetResourceNodeTypes", varargs...)
	ret0, _ := ret[0].(*v1.GetResourceNodeTypesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourceNodeTypes indicates an expected call of GetResourceNodeTypes.
func (mr *MockResourceNodeServiceClientMockRecorder) GetResourceNodeTypes(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceNodeTypes", reflect.TypeOf((*MockResourceNodeServiceClient)(nil).GetResourceNodeTypes), varargs...)
}

// GetResourcesInChunk mocks base method.
func (m *MockResourceNodeServiceClient) GetResourcesInChunk(ctx context.Context, in *v1.GetResourcesInChunkRequest, opts ...grpc.CallOption) (*v1.GetResourcesInChunkResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetResourcesInChunk", varargs...)
	ret0, _ := ret[0].(*v1.GetResourcesInChunkResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourcesInChunk indicates an expected call of GetResourcesInChunk.
func (mr *MockResourceNodeServiceClientMockRecorder) GetResourcesInChunk(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourcesInChunk", reflect.TypeOf((*MockResourceNodeServiceClient)(nil).GetResourcesInChunk), varargs...)
}

// GetResourcesInChunks mocks base method.
func (m *MockResourceNodeServiceClient) GetResourcesInChunks(ctx context.Context, in *v1.GetResourcesInChunksRequest, opts ...grpc.CallOption) (*v1.GetResourcesInChunksResponse, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetResourcesInChunks", varargs...)
	ret0, _ := ret[0].(*v1.GetResourcesInChunksResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourcesInChunks indicates an expected call of GetResourcesInChunks.
func (mr *MockResourceNodeServiceClientMockRecorder) GetResourcesInChunks(ctx, in any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourcesInChunks", reflect.TypeOf((*MockResourceNodeServiceClient)(nil).GetResourcesInChunks), varargs...)
}

// MockResourceNodeServiceServer is a mock of ResourceNodeServiceServer interface.
type MockResourceNodeServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockResourceNodeServiceServerMockRecorder
	isgomock struct{}
}

// MockResourceNodeServiceServerMockRecorder is the mock recorder for MockResourceNodeServiceServer.
type MockResourceNodeServiceServerMockRecorder struct {
	mock *MockResourceNodeServiceServer
}

// NewMockResourceNodeServiceServer creates a new mock instance.
func NewMockResourceNodeServiceServer(ctrl *gomock.Controller) *MockResourceNodeServiceServer {
	mock := &MockResourceNodeServiceServer{ctrl: ctrl}
	mock.recorder = &MockResourceNodeServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockResourceNodeServiceServer) EXPECT() *MockResourceNodeServiceServerMockRecorder {
	return m.recorder
}

// GetResourceNodeTypes mocks base method.
func (m *MockResourceNodeServiceServer) GetResourceNodeTypes(arg0 context.Context, arg1 *v1.GetResourceNodeTypesRequest) (*v1.GetResourceNodeTypesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceNodeTypes", arg0, arg1)
	ret0, _ := ret[0].(*v1.GetResourceNodeTypesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourceNodeTypes indicates an expected call of GetResourceNodeTypes.
func (mr *MockResourceNodeServiceServerMockRecorder) GetResourceNodeTypes(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceNodeTypes", reflect.TypeOf((*MockResourceNodeServiceServer)(nil).GetResourceNodeTypes), arg0, arg1)
}

// GetResourcesInChunk mocks base method.
func (m *MockResourceNodeServiceServer) GetResourcesInChunk(arg0 context.Context, arg1 *v1.GetResourcesInChunkRequest) (*v1.GetResourcesInChunkResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourcesInChunk", arg0, arg1)
	ret0, _ := ret[0].(*v1.GetResourcesInChunkResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourcesInChunk indicates an expected call of GetResourcesInChunk.
func (mr *MockResourceNodeServiceServerMockRecorder) GetResourcesInChunk(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourcesInChunk", reflect.TypeOf((*MockResourceNodeServiceServer)(nil).GetResourcesInChunk), arg0, arg1)
}

// GetResourcesInChunks mocks base method.
func (m *MockResourceNodeServiceServer) GetResourcesInChunks(arg0 context.Context, arg1 *v1.GetResourcesInChunksRequest) (*v1.GetResourcesInChunksResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourcesInChunks", arg0, arg1)
	ret0, _ := ret[0].(*v1.GetResourcesInChunksResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourcesInChunks indicates an expected call of GetResourcesInChunks.
func (mr *MockResourceNodeServiceServerMockRecorder) GetResourcesInChunks(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourcesInChunks", reflect.TypeOf((*MockResourceNodeServiceServer)(nil).GetResourcesInChunks), arg0, arg1)
}

// mustEmbedUnimplementedResourceNodeServiceServer mocks base method.
func (m *MockResourceNodeServiceServer) mustEmbedUnimplementedResourceNodeServiceServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedResourceNodeServiceServer")
}

// mustEmbedUnimplementedResourceNodeServiceServer indicates an expected call of mustEmbedUnimplementedResourceNodeServiceServer.
func (mr *MockResourceNodeServiceServerMockRecorder) mustEmbedUnimplementedResourceNodeServiceServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedResourceNodeServiceServer", reflect.TypeOf((*MockResourceNodeServiceServer)(nil).mustEmbedUnimplementedResourceNodeServiceServer))
}

// MockUnsafeResourceNodeServiceServer is a mock of UnsafeResourceNodeServiceServer interface.
type MockUnsafeResourceNodeServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockUnsafeResourceNodeServiceServerMockRecorder
	isgomock struct{}
}

// MockUnsafeResourceNodeServiceServerMockRecorder is the mock recorder for MockUnsafeResourceNodeServiceServer.
type MockUnsafeResourceNodeServiceServerMockRecorder struct {
	mock *MockUnsafeResourceNodeServiceServer
}

// NewMockUnsafeResourceNodeServiceServer creates a new mock instance.
func NewMockUnsafeResourceNodeServiceServer(ctrl *gomock.Controller) *MockUnsafeResourceNodeServiceServer {
	mock := &MockUnsafeResourceNodeServiceServer{ctrl: ctrl}
	mock.recorder = &MockUnsafeResourceNodeServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnsafeResourceNodeServiceServer) EXPECT() *MockUnsafeResourceNodeServiceServerMockRecorder {
	return m.recorder
}

// mustEmbedUnimplementedResourceNodeServiceServer mocks base method.
func (m *MockUnsafeResourceNodeServiceServer) mustEmbedUnimplementedResourceNodeServiceServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedResourceNodeServiceServer")
}

// mustEmbedUnimplementedResourceNodeServiceServer indicates an expected call of mustEmbedUnimplementedResourceNodeServiceServer.
func (mr *MockUnsafeResourceNodeServiceServerMockRecorder) mustEmbedUnimplementedResourceNodeServiceServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedResourceNodeServiceServer", reflect.TypeOf((*MockUnsafeResourceNodeServiceServer)(nil).mustEmbedUnimplementedResourceNodeServiceServer))
}
