// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.4
// source: resource_node/v1/resource_node.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Resource node rarity levels
type ResourceRarity int32

const (
	ResourceRarity_RESOURCE_RARITY_UNSPECIFIED ResourceRarity = 0
	ResourceRarity_RESOURCE_RARITY_COMMON      ResourceRarity = 1
	ResourceRarity_RESOURCE_RARITY_UNCOMMON    ResourceRarity = 2
	ResourceRarity_RESOURCE_RARITY_RARE        ResourceRarity = 3
	ResourceRarity_RESOURCE_RARITY_VERY_RARE   ResourceRarity = 4
)

// Enum value maps for ResourceRarity.
var (
	ResourceRarity_name = map[int32]string{
		0: "RESOURCE_RARITY_UNSPECIFIED",
		1: "RESOURCE_RARITY_COMMON",
		2: "RESOURCE_RARITY_UNCOMMON",
		3: "RESOURCE_RARITY_RARE",
		4: "RESOURCE_RARITY_VERY_RARE",
	}
	ResourceRarity_value = map[string]int32{
		"RESOURCE_RARITY_UNSPECIFIED": 0,
		"RESOURCE_RARITY_COMMON":      1,
		"RESOURCE_RARITY_UNCOMMON":    2,
		"RESOURCE_RARITY_RARE":        3,
		"RESOURCE_RARITY_VERY_RARE":   4,
	}
)

func (x ResourceRarity) Enum() *ResourceRarity {
	p := new(ResourceRarity)
	*p = x
	return p
}

func (x ResourceRarity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceRarity) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_node_v1_resource_node_proto_enumTypes[0].Descriptor()
}

func (ResourceRarity) Type() protoreflect.EnumType {
	return &file_resource_node_v1_resource_node_proto_enumTypes[0]
}

func (x ResourceRarity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceRarity.Descriptor instead.
func (ResourceRarity) EnumDescriptor() ([]byte, []int) {
	return file_resource_node_v1_resource_node_proto_rawDescGZIP(), []int{0}
}

// Resource node type identifiers
type ResourceNodeTypeId int32

const (
	ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_UNSPECIFIED ResourceNodeTypeId = 0
	// Grass Terrain Resources
	ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_HERB_PATCH          ResourceNodeTypeId = 1
	ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_BERRY_BUSH          ResourceNodeTypeId = 2
	ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_MINERAL_OUTCROPPING ResourceNodeTypeId = 3
	// Water Terrain Resources
	ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_FISHING_SPOT    ResourceNodeTypeId = 4
	ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_KELP_BED        ResourceNodeTypeId = 5
	ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_PEARL_FORMATION ResourceNodeTypeId = 6
	// Sand Terrain Resources
	ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_CRYSTAL_FORMATION ResourceNodeTypeId = 7
	ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_CLAY_DEPOSIT      ResourceNodeTypeId = 8
	ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_DESERT_PLANT      ResourceNodeTypeId = 9
	// Dirt/Stone Terrain Resources
	ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_HARVESTABLE_TREE ResourceNodeTypeId = 10
	ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_MUSHROOM_CIRCLE  ResourceNodeTypeId = 11
	ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_WILD_HONEY_HIVE  ResourceNodeTypeId = 12
	ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_STONE_VEIN       ResourceNodeTypeId = 13
	ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_GEM_DEPOSIT      ResourceNodeTypeId = 14
	ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_METAL_ORE        ResourceNodeTypeId = 15
)

// Enum value maps for ResourceNodeTypeId.
var (
	ResourceNodeTypeId_name = map[int32]string{
		0:  "RESOURCE_NODE_TYPE_ID_UNSPECIFIED",
		1:  "RESOURCE_NODE_TYPE_ID_HERB_PATCH",
		2:  "RESOURCE_NODE_TYPE_ID_BERRY_BUSH",
		3:  "RESOURCE_NODE_TYPE_ID_MINERAL_OUTCROPPING",
		4:  "RESOURCE_NODE_TYPE_ID_FISHING_SPOT",
		5:  "RESOURCE_NODE_TYPE_ID_KELP_BED",
		6:  "RESOURCE_NODE_TYPE_ID_PEARL_FORMATION",
		7:  "RESOURCE_NODE_TYPE_ID_CRYSTAL_FORMATION",
		8:  "RESOURCE_NODE_TYPE_ID_CLAY_DEPOSIT",
		9:  "RESOURCE_NODE_TYPE_ID_DESERT_PLANT",
		10: "RESOURCE_NODE_TYPE_ID_HARVESTABLE_TREE",
		11: "RESOURCE_NODE_TYPE_ID_MUSHROOM_CIRCLE",
		12: "RESOURCE_NODE_TYPE_ID_WILD_HONEY_HIVE",
		13: "RESOURCE_NODE_TYPE_ID_STONE_VEIN",
		14: "RESOURCE_NODE_TYPE_ID_GEM_DEPOSIT",
		15: "RESOURCE_NODE_TYPE_ID_METAL_ORE",
	}
	ResourceNodeTypeId_value = map[string]int32{
		"RESOURCE_NODE_TYPE_ID_UNSPECIFIED":         0,
		"RESOURCE_NODE_TYPE_ID_HERB_PATCH":          1,
		"RESOURCE_NODE_TYPE_ID_BERRY_BUSH":          2,
		"RESOURCE_NODE_TYPE_ID_MINERAL_OUTCROPPING": 3,
		"RESOURCE_NODE_TYPE_ID_FISHING_SPOT":        4,
		"RESOURCE_NODE_TYPE_ID_KELP_BED":            5,
		"RESOURCE_NODE_TYPE_ID_PEARL_FORMATION":     6,
		"RESOURCE_NODE_TYPE_ID_CRYSTAL_FORMATION":   7,
		"RESOURCE_NODE_TYPE_ID_CLAY_DEPOSIT":        8,
		"RESOURCE_NODE_TYPE_ID_DESERT_PLANT":        9,
		"RESOURCE_NODE_TYPE_ID_HARVESTABLE_TREE":    10,
		"RESOURCE_NODE_TYPE_ID_MUSHROOM_CIRCLE":     11,
		"RESOURCE_NODE_TYPE_ID_WILD_HONEY_HIVE":     12,
		"RESOURCE_NODE_TYPE_ID_STONE_VEIN":          13,
		"RESOURCE_NODE_TYPE_ID_GEM_DEPOSIT":         14,
		"RESOURCE_NODE_TYPE_ID_METAL_ORE":           15,
	}
)

func (x ResourceNodeTypeId) Enum() *ResourceNodeTypeId {
	p := new(ResourceNodeTypeId)
	*p = x
	return p
}

func (x ResourceNodeTypeId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ResourceNodeTypeId) Descriptor() protoreflect.EnumDescriptor {
	return file_resource_node_v1_resource_node_proto_enumTypes[1].Descriptor()
}

func (ResourceNodeTypeId) Type() protoreflect.EnumType {
	return &file_resource_node_v1_resource_node_proto_enumTypes[1]
}

func (x ResourceNodeTypeId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ResourceNodeTypeId.Descriptor instead.
func (ResourceNodeTypeId) EnumDescriptor() ([]byte, []int) {
	return file_resource_node_v1_resource_node_proto_rawDescGZIP(), []int{1}
}

// Resource node secondary drop information
type SecondaryDrop struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Chance        float32                `protobuf:"fixed32,2,opt,name=chance,proto3" json:"chance,omitempty"`
	MinAmount     int32                  `protobuf:"varint,3,opt,name=min_amount,json=minAmount,proto3" json:"min_amount,omitempty"`
	MaxAmount     int32                  `protobuf:"varint,4,opt,name=max_amount,json=maxAmount,proto3" json:"max_amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SecondaryDrop) Reset() {
	*x = SecondaryDrop{}
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SecondaryDrop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecondaryDrop) ProtoMessage() {}

func (x *SecondaryDrop) ProtoReflect() protoreflect.Message {
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecondaryDrop.ProtoReflect.Descriptor instead.
func (*SecondaryDrop) Descriptor() ([]byte, []int) {
	return file_resource_node_v1_resource_node_proto_rawDescGZIP(), []int{0}
}

func (x *SecondaryDrop) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SecondaryDrop) GetChance() float32 {
	if x != nil {
		return x.Chance
	}
	return 0
}

func (x *SecondaryDrop) GetMinAmount() int32 {
	if x != nil {
		return x.MinAmount
	}
	return 0
}

func (x *SecondaryDrop) GetMaxAmount() int32 {
	if x != nil {
		return x.MaxAmount
	}
	return 0
}

// Resource node properties
type ResourceProperties struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	HarvestTime    int32                  `protobuf:"varint,1,opt,name=harvest_time,json=harvestTime,proto3" json:"harvest_time,omitempty"`         // Time in seconds to harvest
	RespawnTime    int32                  `protobuf:"varint,2,opt,name=respawn_time,json=respawnTime,proto3" json:"respawn_time,omitempty"`         // Time in seconds for respawn
	YieldMin       int32                  `protobuf:"varint,3,opt,name=yield_min,json=yieldMin,proto3" json:"yield_min,omitempty"`                  // Minimum yield per harvest
	YieldMax       int32                  `protobuf:"varint,4,opt,name=yield_max,json=yieldMax,proto3" json:"yield_max,omitempty"`                  // Maximum yield per harvest
	SecondaryDrops []*SecondaryDrop       `protobuf:"bytes,5,rep,name=secondary_drops,json=secondaryDrops,proto3" json:"secondary_drops,omitempty"` // Possible secondary drops
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ResourceProperties) Reset() {
	*x = ResourceProperties{}
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceProperties) ProtoMessage() {}

func (x *ResourceProperties) ProtoReflect() protoreflect.Message {
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceProperties.ProtoReflect.Descriptor instead.
func (*ResourceProperties) Descriptor() ([]byte, []int) {
	return file_resource_node_v1_resource_node_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceProperties) GetHarvestTime() int32 {
	if x != nil {
		return x.HarvestTime
	}
	return 0
}

func (x *ResourceProperties) GetRespawnTime() int32 {
	if x != nil {
		return x.RespawnTime
	}
	return 0
}

func (x *ResourceProperties) GetYieldMin() int32 {
	if x != nil {
		return x.YieldMin
	}
	return 0
}

func (x *ResourceProperties) GetYieldMax() int32 {
	if x != nil {
		return x.YieldMax
	}
	return 0
}

func (x *ResourceProperties) GetSecondaryDrops() []*SecondaryDrop {
	if x != nil {
		return x.SecondaryDrops
	}
	return nil
}

// Resource node visual data
type ResourceVisual struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sprite        string                 `protobuf:"bytes,1,opt,name=sprite,proto3" json:"sprite,omitempty"` // Sprite identifier
	Color         string                 `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`   // Color in hex format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceVisual) Reset() {
	*x = ResourceVisual{}
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceVisual) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceVisual) ProtoMessage() {}

func (x *ResourceVisual) ProtoReflect() protoreflect.Message {
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceVisual.ProtoReflect.Descriptor instead.
func (*ResourceVisual) Descriptor() ([]byte, []int) {
	return file_resource_node_v1_resource_node_proto_rawDescGZIP(), []int{2}
}

func (x *ResourceVisual) GetSprite() string {
	if x != nil {
		return x.Sprite
	}
	return ""
}

func (x *ResourceVisual) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

// Resource node type information
type ResourceNodeType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	TerrainType   string                 `protobuf:"bytes,4,opt,name=terrain_type,json=terrainType,proto3" json:"terrain_type,omitempty"`
	Rarity        ResourceRarity         `protobuf:"varint,5,opt,name=rarity,proto3,enum=resource_node.v1.ResourceRarity" json:"rarity,omitempty"`
	VisualData    *ResourceVisual        `protobuf:"bytes,6,opt,name=visual_data,json=visualData,proto3" json:"visual_data,omitempty"`
	Properties    *ResourceProperties    `protobuf:"bytes,7,opt,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceNodeType) Reset() {
	*x = ResourceNodeType{}
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceNodeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceNodeType) ProtoMessage() {}

func (x *ResourceNodeType) ProtoReflect() protoreflect.Message {
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceNodeType.ProtoReflect.Descriptor instead.
func (*ResourceNodeType) Descriptor() ([]byte, []int) {
	return file_resource_node_v1_resource_node_proto_rawDescGZIP(), []int{3}
}

func (x *ResourceNodeType) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResourceNodeType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceNodeType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ResourceNodeType) GetTerrainType() string {
	if x != nil {
		return x.TerrainType
	}
	return ""
}

func (x *ResourceNodeType) GetRarity() ResourceRarity {
	if x != nil {
		return x.Rarity
	}
	return ResourceRarity_RESOURCE_RARITY_UNSPECIFIED
}

func (x *ResourceNodeType) GetVisualData() *ResourceVisual {
	if x != nil {
		return x.VisualData
	}
	return nil
}

func (x *ResourceNodeType) GetProperties() *ResourceProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

// Resource node instance
type ResourceNode struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ResourceNodeTypeId ResourceNodeTypeId     `protobuf:"varint,2,opt,name=resource_node_type_id,json=resourceNodeTypeId,proto3,enum=resource_node.v1.ResourceNodeTypeId" json:"resource_node_type_id,omitempty"`
	ResourceNodeType   *ResourceNodeType      `protobuf:"bytes,3,opt,name=resource_node_type,json=resourceNodeType,proto3" json:"resource_node_type,omitempty"`
	ChunkX             int32                  `protobuf:"varint,4,opt,name=chunk_x,json=chunkX,proto3" json:"chunk_x,omitempty"`
	ChunkY             int32                  `protobuf:"varint,5,opt,name=chunk_y,json=chunkY,proto3" json:"chunk_y,omitempty"`
	X                  int32                  `protobuf:"varint,6,opt,name=x,proto3" json:"x,omitempty"` // Global X coordinate
	Y                  int32                  `protobuf:"varint,7,opt,name=y,proto3" json:"y,omitempty"` // Global Y coordinate
	ClusterId          string                 `protobuf:"bytes,8,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	Size               int32                  `protobuf:"varint,9,opt,name=size,proto3" json:"size,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ResourceNode) Reset() {
	*x = ResourceNode{}
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceNode) ProtoMessage() {}

func (x *ResourceNode) ProtoReflect() protoreflect.Message {
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceNode.ProtoReflect.Descriptor instead.
func (*ResourceNode) Descriptor() ([]byte, []int) {
	return file_resource_node_v1_resource_node_proto_rawDescGZIP(), []int{4}
}

func (x *ResourceNode) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResourceNode) GetResourceNodeTypeId() ResourceNodeTypeId {
	if x != nil {
		return x.ResourceNodeTypeId
	}
	return ResourceNodeTypeId_RESOURCE_NODE_TYPE_ID_UNSPECIFIED
}

func (x *ResourceNode) GetResourceNodeType() *ResourceNodeType {
	if x != nil {
		return x.ResourceNodeType
	}
	return nil
}

func (x *ResourceNode) GetChunkX() int32 {
	if x != nil {
		return x.ChunkX
	}
	return 0
}

func (x *ResourceNode) GetChunkY() int32 {
	if x != nil {
		return x.ChunkY
	}
	return 0
}

func (x *ResourceNode) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ResourceNode) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *ResourceNode) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ResourceNode) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ResourceNode) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Request to get resource nodes in a specific chunk
type GetResourcesInChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorldId       []byte                 `protobuf:"bytes,1,opt,name=world_id,json=worldId,proto3" json:"world_id,omitempty"`
	ChunkX        int32                  `protobuf:"varint,2,opt,name=chunk_x,json=chunkX,proto3" json:"chunk_x,omitempty"`
	ChunkY        int32                  `protobuf:"varint,3,opt,name=chunk_y,json=chunkY,proto3" json:"chunk_y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResourcesInChunkRequest) Reset() {
	*x = GetResourcesInChunkRequest{}
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResourcesInChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesInChunkRequest) ProtoMessage() {}

func (x *GetResourcesInChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesInChunkRequest.ProtoReflect.Descriptor instead.
func (*GetResourcesInChunkRequest) Descriptor() ([]byte, []int) {
	return file_resource_node_v1_resource_node_proto_rawDescGZIP(), []int{5}
}

func (x *GetResourcesInChunkRequest) GetWorldId() []byte {
	if x != nil {
		return x.WorldId
	}
	return nil
}

func (x *GetResourcesInChunkRequest) GetChunkX() int32 {
	if x != nil {
		return x.ChunkX
	}
	return 0
}

func (x *GetResourcesInChunkRequest) GetChunkY() int32 {
	if x != nil {
		return x.ChunkY
	}
	return 0
}

// Response with resource nodes in a chunk
type GetResourcesInChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resources     []*ResourceNode        `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResourcesInChunkResponse) Reset() {
	*x = GetResourcesInChunkResponse{}
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResourcesInChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesInChunkResponse) ProtoMessage() {}

func (x *GetResourcesInChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesInChunkResponse.ProtoReflect.Descriptor instead.
func (*GetResourcesInChunkResponse) Descriptor() ([]byte, []int) {
	return file_resource_node_v1_resource_node_proto_rawDescGZIP(), []int{6}
}

func (x *GetResourcesInChunkResponse) GetResources() []*ResourceNode {
	if x != nil {
		return x.Resources
	}
	return nil
}

// Request to get resource nodes in multiple chunks
type GetResourcesInChunksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Coordinates   []*ChunkCoordinate     `protobuf:"bytes,1,rep,name=coordinates,proto3" json:"coordinates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResourcesInChunksRequest) Reset() {
	*x = GetResourcesInChunksRequest{}
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResourcesInChunksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesInChunksRequest) ProtoMessage() {}

func (x *GetResourcesInChunksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesInChunksRequest.ProtoReflect.Descriptor instead.
func (*GetResourcesInChunksRequest) Descriptor() ([]byte, []int) {
	return file_resource_node_v1_resource_node_proto_rawDescGZIP(), []int{7}
}

func (x *GetResourcesInChunksRequest) GetCoordinates() []*ChunkCoordinate {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

// Chunk coordinate pair
type ChunkCoordinate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorldId       []byte                 `protobuf:"bytes,1,opt,name=world_id,json=worldId,proto3" json:"world_id,omitempty"`
	ChunkX        int32                  `protobuf:"varint,2,opt,name=chunk_x,json=chunkX,proto3" json:"chunk_x,omitempty"`
	ChunkY        int32                  `protobuf:"varint,3,opt,name=chunk_y,json=chunkY,proto3" json:"chunk_y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkCoordinate) Reset() {
	*x = ChunkCoordinate{}
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkCoordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkCoordinate) ProtoMessage() {}

func (x *ChunkCoordinate) ProtoReflect() protoreflect.Message {
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkCoordinate.ProtoReflect.Descriptor instead.
func (*ChunkCoordinate) Descriptor() ([]byte, []int) {
	return file_resource_node_v1_resource_node_proto_rawDescGZIP(), []int{8}
}

func (x *ChunkCoordinate) GetWorldId() []byte {
	if x != nil {
		return x.WorldId
	}
	return nil
}

func (x *ChunkCoordinate) GetChunkX() int32 {
	if x != nil {
		return x.ChunkX
	}
	return 0
}

func (x *ChunkCoordinate) GetChunkY() int32 {
	if x != nil {
		return x.ChunkY
	}
	return 0
}

// Response with resource nodes in multiple chunks
type GetResourcesInChunksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Resources     []*ResourceNode        `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResourcesInChunksResponse) Reset() {
	*x = GetResourcesInChunksResponse{}
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResourcesInChunksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourcesInChunksResponse) ProtoMessage() {}

func (x *GetResourcesInChunksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourcesInChunksResponse.ProtoReflect.Descriptor instead.
func (*GetResourcesInChunksResponse) Descriptor() ([]byte, []int) {
	return file_resource_node_v1_resource_node_proto_rawDescGZIP(), []int{9}
}

func (x *GetResourcesInChunksResponse) GetResources() []*ResourceNode {
	if x != nil {
		return x.Resources
	}
	return nil
}

// Request to get all resource node types
type GetResourceNodeTypesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetResourceNodeTypesRequest) Reset() {
	*x = GetResourceNodeTypesRequest{}
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResourceNodeTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceNodeTypesRequest) ProtoMessage() {}

func (x *GetResourceNodeTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceNodeTypesRequest.ProtoReflect.Descriptor instead.
func (*GetResourceNodeTypesRequest) Descriptor() ([]byte, []int) {
	return file_resource_node_v1_resource_node_proto_rawDescGZIP(), []int{10}
}

// Response with all resource node types
type GetResourceNodeTypesResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ResourceNodeTypes []*ResourceNodeType    `protobuf:"bytes,1,rep,name=resource_node_types,json=resourceNodeTypes,proto3" json:"resource_node_types,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetResourceNodeTypesResponse) Reset() {
	*x = GetResourceNodeTypesResponse{}
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetResourceNodeTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResourceNodeTypesResponse) ProtoMessage() {}

func (x *GetResourceNodeTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resource_node_v1_resource_node_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResourceNodeTypesResponse.ProtoReflect.Descriptor instead.
func (*GetResourceNodeTypesResponse) Descriptor() ([]byte, []int) {
	return file_resource_node_v1_resource_node_proto_rawDescGZIP(), []int{11}
}

func (x *GetResourceNodeTypesResponse) GetResourceNodeTypes() []*ResourceNodeType {
	if x != nil {
		return x.ResourceNodeTypes
	}
	return nil
}

var File_resource_node_v1_resource_node_proto protoreflect.FileDescriptor

const file_resource_node_v1_resource_node_proto_rawDesc = "" +
	"\n" +
	"$resource_node/v1/resource_node.proto\x12\x10resource_node.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"y\n" +
	"\rSecondaryDrop\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06chance\x18\x02 \x01(\x02R\x06chance\x12\x1d\n" +
	"\n" +
	"min_amount\x18\x03 \x01(\x05R\tminAmount\x12\x1d\n" +
	"\n" +
	"max_amount\x18\x04 \x01(\x05R\tmaxAmount\"\xde\x01\n" +
	"\x12ResourceProperties\x12!\n" +
	"\fharvest_time\x18\x01 \x01(\x05R\vharvestTime\x12!\n" +
	"\frespawn_time\x18\x02 \x01(\x05R\vrespawnTime\x12\x1b\n" +
	"\tyield_min\x18\x03 \x01(\x05R\byieldMin\x12\x1b\n" +
	"\tyield_max\x18\x04 \x01(\x05R\byieldMax\x12H\n" +
	"\x0fsecondary_drops\x18\x05 \x03(\v2\x1f.resource_node.v1.SecondaryDropR\x0esecondaryDrops\">\n" +
	"\x0eResourceVisual\x12\x16\n" +
	"\x06sprite\x18\x01 \x01(\tR\x06sprite\x12\x14\n" +
	"\x05color\x18\x02 \x01(\tR\x05color\"\xbe\x02\n" +
	"\x10ResourceNodeType\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12!\n" +
	"\fterrain_type\x18\x04 \x01(\tR\vterrainType\x128\n" +
	"\x06rarity\x18\x05 \x01(\x0e2 .resource_node.v1.ResourceRarityR\x06rarity\x12A\n" +
	"\vvisual_data\x18\x06 \x01(\v2 .resource_node.v1.ResourceVisualR\n" +
	"visualData\x12D\n" +
	"\n" +
	"properties\x18\a \x01(\v2$.resource_node.v1.ResourcePropertiesR\n" +
	"properties\"\x85\x03\n" +
	"\fResourceNode\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12W\n" +
	"\x15resource_node_type_id\x18\x02 \x01(\x0e2$.resource_node.v1.ResourceNodeTypeIdR\x12resourceNodeTypeId\x12P\n" +
	"\x12resource_node_type\x18\x03 \x01(\v2\".resource_node.v1.ResourceNodeTypeR\x10resourceNodeType\x12\x17\n" +
	"\achunk_x\x18\x04 \x01(\x05R\x06chunkX\x12\x17\n" +
	"\achunk_y\x18\x05 \x01(\x05R\x06chunkY\x12\f\n" +
	"\x01x\x18\x06 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\a \x01(\x05R\x01y\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\b \x01(\tR\tclusterId\x12\x12\n" +
	"\x04size\x18\t \x01(\x05R\x04size\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"i\n" +
	"\x1aGetResourcesInChunkRequest\x12\x19\n" +
	"\bworld_id\x18\x01 \x01(\fR\aworldId\x12\x17\n" +
	"\achunk_x\x18\x02 \x01(\x05R\x06chunkX\x12\x17\n" +
	"\achunk_y\x18\x03 \x01(\x05R\x06chunkY\"[\n" +
	"\x1bGetResourcesInChunkResponse\x12<\n" +
	"\tresources\x18\x01 \x03(\v2\x1e.resource_node.v1.ResourceNodeR\tresources\"b\n" +
	"\x1bGetResourcesInChunksRequest\x12C\n" +
	"\vcoordinates\x18\x01 \x03(\v2!.resource_node.v1.ChunkCoordinateR\vcoordinates\"^\n" +
	"\x0fChunkCoordinate\x12\x19\n" +
	"\bworld_id\x18\x01 \x01(\fR\aworldId\x12\x17\n" +
	"\achunk_x\x18\x02 \x01(\x05R\x06chunkX\x12\x17\n" +
	"\achunk_y\x18\x03 \x01(\x05R\x06chunkY\"\\\n" +
	"\x1cGetResourcesInChunksResponse\x12<\n" +
	"\tresources\x18\x01 \x03(\v2\x1e.resource_node.v1.ResourceNodeR\tresources\"\x1d\n" +
	"\x1bGetResourceNodeTypesRequest\"r\n" +
	"\x1cGetResourceNodeTypesResponse\x12R\n" +
	"\x13resource_node_types\x18\x01 \x03(\v2\".resource_node.v1.ResourceNodeTypeR\x11resourceNodeTypes*\xa4\x01\n" +
	"\x0eResourceRarity\x12\x1f\n" +
	"\x1bRESOURCE_RARITY_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16RESOURCE_RARITY_COMMON\x10\x01\x12\x1c\n" +
	"\x18RESOURCE_RARITY_UNCOMMON\x10\x02\x12\x18\n" +
	"\x14RESOURCE_RARITY_RARE\x10\x03\x12\x1d\n" +
	"\x19RESOURCE_RARITY_VERY_RARE\x10\x04*\x9e\x05\n" +
	"\x12ResourceNodeTypeId\x12%\n" +
	"!RESOURCE_NODE_TYPE_ID_UNSPECIFIED\x10\x00\x12$\n" +
	" RESOURCE_NODE_TYPE_ID_HERB_PATCH\x10\x01\x12$\n" +
	" RESOURCE_NODE_TYPE_ID_BERRY_BUSH\x10\x02\x12-\n" +
	")RESOURCE_NODE_TYPE_ID_MINERAL_OUTCROPPING\x10\x03\x12&\n" +
	"\"RESOURCE_NODE_TYPE_ID_FISHING_SPOT\x10\x04\x12\"\n" +
	"\x1eRESOURCE_NODE_TYPE_ID_KELP_BED\x10\x05\x12)\n" +
	"%RESOURCE_NODE_TYPE_ID_PEARL_FORMATION\x10\x06\x12+\n" +
	"'RESOURCE_NODE_TYPE_ID_CRYSTAL_FORMATION\x10\a\x12&\n" +
	"\"RESOURCE_NODE_TYPE_ID_CLAY_DEPOSIT\x10\b\x12&\n" +
	"\"RESOURCE_NODE_TYPE_ID_DESERT_PLANT\x10\t\x12*\n" +
	"&RESOURCE_NODE_TYPE_ID_HARVESTABLE_TREE\x10\n" +
	"\x12)\n" +
	"%RESOURCE_NODE_TYPE_ID_MUSHROOM_CIRCLE\x10\v\x12)\n" +
	"%RESOURCE_NODE_TYPE_ID_WILD_HONEY_HIVE\x10\f\x12$\n" +
	" RESOURCE_NODE_TYPE_ID_STONE_VEIN\x10\r\x12%\n" +
	"!RESOURCE_NODE_TYPE_ID_GEM_DEPOSIT\x10\x0e\x12#\n" +
	"\x1fRESOURCE_NODE_TYPE_ID_METAL_ORE\x10\x0f2\xfd\x02\n" +
	"\x13ResourceNodeService\x12t\n" +
	"\x13GetResourcesInChunk\x12,.resource_node.v1.GetResourcesInChunkRequest\x1a-.resource_node.v1.GetResourcesInChunkResponse\"\x00\x12w\n" +
	"\x14GetResourcesInChunks\x12-.resource_node.v1.GetResourcesInChunksRequest\x1a..resource_node.v1.GetResourcesInChunksResponse\"\x00\x12w\n" +
	"\x14GetResourceNodeTypes\x12-.resource_node.v1.GetResourceNodeTypesRequest\x1a..resource_node.v1.GetResourceNodeTypesResponse\"\x00B4Z2github.com/VoidMesh/api/api/proto/resource_node/v1b\x06proto3"

var (
	file_resource_node_v1_resource_node_proto_rawDescOnce sync.Once
	file_resource_node_v1_resource_node_proto_rawDescData []byte
)

func file_resource_node_v1_resource_node_proto_rawDescGZIP() []byte {
	file_resource_node_v1_resource_node_proto_rawDescOnce.Do(func() {
		file_resource_node_v1_resource_node_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_resource_node_v1_resource_node_proto_rawDesc), len(file_resource_node_v1_resource_node_proto_rawDesc)))
	})
	return file_resource_node_v1_resource_node_proto_rawDescData
}

var file_resource_node_v1_resource_node_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_resource_node_v1_resource_node_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_resource_node_v1_resource_node_proto_goTypes = []any{
	(ResourceRarity)(0),                  // 0: resource_node.v1.ResourceRarity
	(ResourceNodeTypeId)(0),              // 1: resource_node.v1.ResourceNodeTypeId
	(*SecondaryDrop)(nil),                // 2: resource_node.v1.SecondaryDrop
	(*ResourceProperties)(nil),           // 3: resource_node.v1.ResourceProperties
	(*ResourceVisual)(nil),               // 4: resource_node.v1.ResourceVisual
	(*ResourceNodeType)(nil),             // 5: resource_node.v1.ResourceNodeType
	(*ResourceNode)(nil),                 // 6: resource_node.v1.ResourceNode
	(*GetResourcesInChunkRequest)(nil),   // 7: resource_node.v1.GetResourcesInChunkRequest
	(*GetResourcesInChunkResponse)(nil),  // 8: resource_node.v1.GetResourcesInChunkResponse
	(*GetResourcesInChunksRequest)(nil),  // 9: resource_node.v1.GetResourcesInChunksRequest
	(*ChunkCoordinate)(nil),              // 10: resource_node.v1.ChunkCoordinate
	(*GetResourcesInChunksResponse)(nil), // 11: resource_node.v1.GetResourcesInChunksResponse
	(*GetResourceNodeTypesRequest)(nil),  // 12: resource_node.v1.GetResourceNodeTypesRequest
	(*GetResourceNodeTypesResponse)(nil), // 13: resource_node.v1.GetResourceNodeTypesResponse
	(*timestamppb.Timestamp)(nil),        // 14: google.protobuf.Timestamp
}
var file_resource_node_v1_resource_node_proto_depIdxs = []int32{
	2,  // 0: resource_node.v1.ResourceProperties.secondary_drops:type_name -> resource_node.v1.SecondaryDrop
	0,  // 1: resource_node.v1.ResourceNodeType.rarity:type_name -> resource_node.v1.ResourceRarity
	4,  // 2: resource_node.v1.ResourceNodeType.visual_data:type_name -> resource_node.v1.ResourceVisual
	3,  // 3: resource_node.v1.ResourceNodeType.properties:type_name -> resource_node.v1.ResourceProperties
	1,  // 4: resource_node.v1.ResourceNode.resource_node_type_id:type_name -> resource_node.v1.ResourceNodeTypeId
	5,  // 5: resource_node.v1.ResourceNode.resource_node_type:type_name -> resource_node.v1.ResourceNodeType
	14, // 6: resource_node.v1.ResourceNode.created_at:type_name -> google.protobuf.Timestamp
	6,  // 7: resource_node.v1.GetResourcesInChunkResponse.resources:type_name -> resource_node.v1.ResourceNode
	10, // 8: resource_node.v1.GetResourcesInChunksRequest.coordinates:type_name -> resource_node.v1.ChunkCoordinate
	6,  // 9: resource_node.v1.GetResourcesInChunksResponse.resources:type_name -> resource_node.v1.ResourceNode
	5,  // 10: resource_node.v1.GetResourceNodeTypesResponse.resource_node_types:type_name -> resource_node.v1.ResourceNodeType
	7,  // 11: resource_node.v1.ResourceNodeService.GetResourcesInChunk:input_type -> resource_node.v1.GetResourcesInChunkRequest
	9,  // 12: resource_node.v1.ResourceNodeService.GetResourcesInChunks:input_type -> resource_node.v1.GetResourcesInChunksRequest
	12, // 13: resource_node.v1.ResourceNodeService.GetResourceNodeTypes:input_type -> resource_node.v1.GetResourceNodeTypesRequest
	8,  // 14: resource_node.v1.ResourceNodeService.GetResourcesInChunk:output_type -> resource_node.v1.GetResourcesInChunkResponse
	11, // 15: resource_node.v1.ResourceNodeService.GetResourcesInChunks:output_type -> resource_node.v1.GetResourcesInChunksResponse
	13, // 16: resource_node.v1.ResourceNodeService.GetResourceNodeTypes:output_type -> resource_node.v1.GetResourceNodeTypesResponse
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_resource_node_v1_resource_node_proto_init() }
func file_resource_node_v1_resource_node_proto_init() {
	if File_resource_node_v1_resource_node_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_resource_node_v1_resource_node_proto_rawDesc), len(file_resource_node_v1_resource_node_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_resource_node_v1_resource_node_proto_goTypes,
		DependencyIndexes: file_resource_node_v1_resource_node_proto_depIdxs,
		EnumInfos:         file_resource_node_v1_resource_node_proto_enumTypes,
		MessageInfos:      file_resource_node_v1_resource_node_proto_msgTypes,
	}.Build()
	File_resource_node_v1_resource_node_proto = out.File
	file_resource_node_v1_resource_node_proto_goTypes = nil
	file_resource_node_v1_resource_node_proto_depIdxs = nil
}
