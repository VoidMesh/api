// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.4
// source: chunk/v1/chunk.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TerrainType int32

const (
	TerrainType_TERRAIN_TYPE_UNSPECIFIED TerrainType = 0
	TerrainType_TERRAIN_TYPE_GRASS       TerrainType = 1
	TerrainType_TERRAIN_TYPE_WATER       TerrainType = 2
	TerrainType_TERRAIN_TYPE_STONE       TerrainType = 3
	TerrainType_TERRAIN_TYPE_SAND        TerrainType = 4
	TerrainType_TERRAIN_TYPE_DIRT        TerrainType = 5
)

// Enum value maps for TerrainType.
var (
	TerrainType_name = map[int32]string{
		0: "TERRAIN_TYPE_UNSPECIFIED",
		1: "TERRAIN_TYPE_GRASS",
		2: "TERRAIN_TYPE_WATER",
		3: "TERRAIN_TYPE_STONE",
		4: "TERRAIN_TYPE_SAND",
		5: "TERRAIN_TYPE_DIRT",
	}
	TerrainType_value = map[string]int32{
		"TERRAIN_TYPE_UNSPECIFIED": 0,
		"TERRAIN_TYPE_GRASS":       1,
		"TERRAIN_TYPE_WATER":       2,
		"TERRAIN_TYPE_STONE":       3,
		"TERRAIN_TYPE_SAND":        4,
		"TERRAIN_TYPE_DIRT":        5,
	}
)

func (x TerrainType) Enum() *TerrainType {
	p := new(TerrainType)
	*p = x
	return p
}

func (x TerrainType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TerrainType) Descriptor() protoreflect.EnumDescriptor {
	return file_chunk_v1_chunk_proto_enumTypes[0].Descriptor()
}

func (TerrainType) Type() protoreflect.EnumType {
	return &file_chunk_v1_chunk_proto_enumTypes[0]
}

func (x TerrainType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TerrainType.Descriptor instead.
func (TerrainType) EnumDescriptor() ([]byte, []int) {
	return file_chunk_v1_chunk_proto_rawDescGZIP(), []int{0}
}

type TerrainCell struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TerrainType   TerrainType            `protobuf:"varint,1,opt,name=terrain_type,json=terrainType,proto3,enum=chunk.v1.TerrainType" json:"terrain_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerrainCell) Reset() {
	*x = TerrainCell{}
	mi := &file_chunk_v1_chunk_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerrainCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerrainCell) ProtoMessage() {}

func (x *TerrainCell) ProtoReflect() protoreflect.Message {
	mi := &file_chunk_v1_chunk_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerrainCell.ProtoReflect.Descriptor instead.
func (*TerrainCell) Descriptor() ([]byte, []int) {
	return file_chunk_v1_chunk_proto_rawDescGZIP(), []int{0}
}

func (x *TerrainCell) GetTerrainType() TerrainType {
	if x != nil {
		return x.TerrainType
	}
	return TerrainType_TERRAIN_TYPE_UNSPECIFIED
}

type ChunkData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkX        int32                  `protobuf:"varint,1,opt,name=chunk_x,json=chunkX,proto3" json:"chunk_x,omitempty"`
	ChunkY        int32                  `protobuf:"varint,2,opt,name=chunk_y,json=chunkY,proto3" json:"chunk_y,omitempty"`
	Cells         []*TerrainCell         `protobuf:"bytes,3,rep,name=cells,proto3" json:"cells,omitempty"` // 32x32 = 1024 cells, row-major order
	Seed          int64                  `protobuf:"varint,4,opt,name=seed,proto3" json:"seed,omitempty"`
	GeneratedAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=generated_at,json=generatedAt,proto3" json:"generated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkData) Reset() {
	*x = ChunkData{}
	mi := &file_chunk_v1_chunk_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkData) ProtoMessage() {}

func (x *ChunkData) ProtoReflect() protoreflect.Message {
	mi := &file_chunk_v1_chunk_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkData.ProtoReflect.Descriptor instead.
func (*ChunkData) Descriptor() ([]byte, []int) {
	return file_chunk_v1_chunk_proto_rawDescGZIP(), []int{1}
}

func (x *ChunkData) GetChunkX() int32 {
	if x != nil {
		return x.ChunkX
	}
	return 0
}

func (x *ChunkData) GetChunkY() int32 {
	if x != nil {
		return x.ChunkY
	}
	return 0
}

func (x *ChunkData) GetCells() []*TerrainCell {
	if x != nil {
		return x.Cells
	}
	return nil
}

func (x *ChunkData) GetSeed() int64 {
	if x != nil {
		return x.Seed
	}
	return 0
}

func (x *ChunkData) GetGeneratedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.GeneratedAt
	}
	return nil
}

type ChunkCoordinate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkX        int32                  `protobuf:"varint,1,opt,name=chunk_x,json=chunkX,proto3" json:"chunk_x,omitempty"`
	ChunkY        int32                  `protobuf:"varint,2,opt,name=chunk_y,json=chunkY,proto3" json:"chunk_y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkCoordinate) Reset() {
	*x = ChunkCoordinate{}
	mi := &file_chunk_v1_chunk_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkCoordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkCoordinate) ProtoMessage() {}

func (x *ChunkCoordinate) ProtoReflect() protoreflect.Message {
	mi := &file_chunk_v1_chunk_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkCoordinate.ProtoReflect.Descriptor instead.
func (*ChunkCoordinate) Descriptor() ([]byte, []int) {
	return file_chunk_v1_chunk_proto_rawDescGZIP(), []int{2}
}

func (x *ChunkCoordinate) GetChunkX() int32 {
	if x != nil {
		return x.ChunkX
	}
	return 0
}

func (x *ChunkCoordinate) GetChunkY() int32 {
	if x != nil {
		return x.ChunkY
	}
	return 0
}

// Get single chunk
type GetChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkX        int32                  `protobuf:"varint,1,opt,name=chunk_x,json=chunkX,proto3" json:"chunk_x,omitempty"`
	ChunkY        int32                  `protobuf:"varint,2,opt,name=chunk_y,json=chunkY,proto3" json:"chunk_y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChunkRequest) Reset() {
	*x = GetChunkRequest{}
	mi := &file_chunk_v1_chunk_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunkRequest) ProtoMessage() {}

func (x *GetChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chunk_v1_chunk_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunkRequest.ProtoReflect.Descriptor instead.
func (*GetChunkRequest) Descriptor() ([]byte, []int) {
	return file_chunk_v1_chunk_proto_rawDescGZIP(), []int{3}
}

func (x *GetChunkRequest) GetChunkX() int32 {
	if x != nil {
		return x.ChunkX
	}
	return 0
}

func (x *GetChunkRequest) GetChunkY() int32 {
	if x != nil {
		return x.ChunkY
	}
	return 0
}

type GetChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunk         *ChunkData             `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChunkResponse) Reset() {
	*x = GetChunkResponse{}
	mi := &file_chunk_v1_chunk_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunkResponse) ProtoMessage() {}

func (x *GetChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chunk_v1_chunk_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunkResponse.ProtoReflect.Descriptor instead.
func (*GetChunkResponse) Descriptor() ([]byte, []int) {
	return file_chunk_v1_chunk_proto_rawDescGZIP(), []int{4}
}

func (x *GetChunkResponse) GetChunk() *ChunkData {
	if x != nil {
		return x.Chunk
	}
	return nil
}

// Get multiple chunks in a rectangle
type GetChunksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinChunkX     int32                  `protobuf:"varint,1,opt,name=min_chunk_x,json=minChunkX,proto3" json:"min_chunk_x,omitempty"`
	MaxChunkX     int32                  `protobuf:"varint,2,opt,name=max_chunk_x,json=maxChunkX,proto3" json:"max_chunk_x,omitempty"`
	MinChunkY     int32                  `protobuf:"varint,3,opt,name=min_chunk_y,json=minChunkY,proto3" json:"min_chunk_y,omitempty"`
	MaxChunkY     int32                  `protobuf:"varint,4,opt,name=max_chunk_y,json=maxChunkY,proto3" json:"max_chunk_y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChunksRequest) Reset() {
	*x = GetChunksRequest{}
	mi := &file_chunk_v1_chunk_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChunksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunksRequest) ProtoMessage() {}

func (x *GetChunksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chunk_v1_chunk_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunksRequest.ProtoReflect.Descriptor instead.
func (*GetChunksRequest) Descriptor() ([]byte, []int) {
	return file_chunk_v1_chunk_proto_rawDescGZIP(), []int{5}
}

func (x *GetChunksRequest) GetMinChunkX() int32 {
	if x != nil {
		return x.MinChunkX
	}
	return 0
}

func (x *GetChunksRequest) GetMaxChunkX() int32 {
	if x != nil {
		return x.MaxChunkX
	}
	return 0
}

func (x *GetChunksRequest) GetMinChunkY() int32 {
	if x != nil {
		return x.MinChunkY
	}
	return 0
}

func (x *GetChunksRequest) GetMaxChunkY() int32 {
	if x != nil {
		return x.MaxChunkY
	}
	return 0
}

type GetChunksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunks        []*ChunkData           `protobuf:"bytes,1,rep,name=chunks,proto3" json:"chunks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChunksResponse) Reset() {
	*x = GetChunksResponse{}
	mi := &file_chunk_v1_chunk_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChunksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunksResponse) ProtoMessage() {}

func (x *GetChunksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chunk_v1_chunk_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunksResponse.ProtoReflect.Descriptor instead.
func (*GetChunksResponse) Descriptor() ([]byte, []int) {
	return file_chunk_v1_chunk_proto_rawDescGZIP(), []int{6}
}

func (x *GetChunksResponse) GetChunks() []*ChunkData {
	if x != nil {
		return x.Chunks
	}
	return nil
}

// Get chunks in radius around a point
type GetChunksInRadiusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CenterChunkX  int32                  `protobuf:"varint,1,opt,name=center_chunk_x,json=centerChunkX,proto3" json:"center_chunk_x,omitempty"`
	CenterChunkY  int32                  `protobuf:"varint,2,opt,name=center_chunk_y,json=centerChunkY,proto3" json:"center_chunk_y,omitempty"`
	Radius        int32                  `protobuf:"varint,3,opt,name=radius,proto3" json:"radius,omitempty"` // Radius in chunks
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChunksInRadiusRequest) Reset() {
	*x = GetChunksInRadiusRequest{}
	mi := &file_chunk_v1_chunk_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChunksInRadiusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunksInRadiusRequest) ProtoMessage() {}

func (x *GetChunksInRadiusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chunk_v1_chunk_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunksInRadiusRequest.ProtoReflect.Descriptor instead.
func (*GetChunksInRadiusRequest) Descriptor() ([]byte, []int) {
	return file_chunk_v1_chunk_proto_rawDescGZIP(), []int{7}
}

func (x *GetChunksInRadiusRequest) GetCenterChunkX() int32 {
	if x != nil {
		return x.CenterChunkX
	}
	return 0
}

func (x *GetChunksInRadiusRequest) GetCenterChunkY() int32 {
	if x != nil {
		return x.CenterChunkY
	}
	return 0
}

func (x *GetChunksInRadiusRequest) GetRadius() int32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

type GetChunksInRadiusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunks        []*ChunkData           `protobuf:"bytes,1,rep,name=chunks,proto3" json:"chunks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChunksInRadiusResponse) Reset() {
	*x = GetChunksInRadiusResponse{}
	mi := &file_chunk_v1_chunk_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChunksInRadiusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunksInRadiusResponse) ProtoMessage() {}

func (x *GetChunksInRadiusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chunk_v1_chunk_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunksInRadiusResponse.ProtoReflect.Descriptor instead.
func (*GetChunksInRadiusResponse) Descriptor() ([]byte, []int) {
	return file_chunk_v1_chunk_proto_rawDescGZIP(), []int{8}
}

func (x *GetChunksInRadiusResponse) GetChunks() []*ChunkData {
	if x != nil {
		return x.Chunks
	}
	return nil
}

var File_chunk_v1_chunk_proto protoreflect.FileDescriptor

const file_chunk_v1_chunk_proto_rawDesc = "" +
	"\n" +
	"\x14chunk/v1/chunk.proto\x12\bchunk.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"G\n" +
	"\vTerrainCell\x128\n" +
	"\fterrain_type\x18\x01 \x01(\x0e2\x15.chunk.v1.TerrainTypeR\vterrainType\"\xbd\x01\n" +
	"\tChunkData\x12\x17\n" +
	"\achunk_x\x18\x01 \x01(\x05R\x06chunkX\x12\x17\n" +
	"\achunk_y\x18\x02 \x01(\x05R\x06chunkY\x12+\n" +
	"\x05cells\x18\x03 \x03(\v2\x15.chunk.v1.TerrainCellR\x05cells\x12\x12\n" +
	"\x04seed\x18\x04 \x01(\x03R\x04seed\x12=\n" +
	"\fgenerated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\vgeneratedAt\"C\n" +
	"\x0fChunkCoordinate\x12\x17\n" +
	"\achunk_x\x18\x01 \x01(\x05R\x06chunkX\x12\x17\n" +
	"\achunk_y\x18\x02 \x01(\x05R\x06chunkY\"C\n" +
	"\x0fGetChunkRequest\x12\x17\n" +
	"\achunk_x\x18\x01 \x01(\x05R\x06chunkX\x12\x17\n" +
	"\achunk_y\x18\x02 \x01(\x05R\x06chunkY\"=\n" +
	"\x10GetChunkResponse\x12)\n" +
	"\x05chunk\x18\x01 \x01(\v2\x13.chunk.v1.ChunkDataR\x05chunk\"\x92\x01\n" +
	"\x10GetChunksRequest\x12\x1e\n" +
	"\vmin_chunk_x\x18\x01 \x01(\x05R\tminChunkX\x12\x1e\n" +
	"\vmax_chunk_x\x18\x02 \x01(\x05R\tmaxChunkX\x12\x1e\n" +
	"\vmin_chunk_y\x18\x03 \x01(\x05R\tminChunkY\x12\x1e\n" +
	"\vmax_chunk_y\x18\x04 \x01(\x05R\tmaxChunkY\"@\n" +
	"\x11GetChunksResponse\x12+\n" +
	"\x06chunks\x18\x01 \x03(\v2\x13.chunk.v1.ChunkDataR\x06chunks\"~\n" +
	"\x18GetChunksInRadiusRequest\x12$\n" +
	"\x0ecenter_chunk_x\x18\x01 \x01(\x05R\fcenterChunkX\x12$\n" +
	"\x0ecenter_chunk_y\x18\x02 \x01(\x05R\fcenterChunkY\x12\x16\n" +
	"\x06radius\x18\x03 \x01(\x05R\x06radius\"H\n" +
	"\x19GetChunksInRadiusResponse\x12+\n" +
	"\x06chunks\x18\x01 \x03(\v2\x13.chunk.v1.ChunkDataR\x06chunks*\xa1\x01\n" +
	"\vTerrainType\x12\x1c\n" +
	"\x18TERRAIN_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12TERRAIN_TYPE_GRASS\x10\x01\x12\x16\n" +
	"\x12TERRAIN_TYPE_WATER\x10\x02\x12\x16\n" +
	"\x12TERRAIN_TYPE_STONE\x10\x03\x12\x15\n" +
	"\x11TERRAIN_TYPE_SAND\x10\x04\x12\x15\n" +
	"\x11TERRAIN_TYPE_DIRT\x10\x052\xfb\x01\n" +
	"\fChunkService\x12C\n" +
	"\bGetChunk\x12\x19.chunk.v1.GetChunkRequest\x1a\x1a.chunk.v1.GetChunkResponse\"\x00\x12F\n" +
	"\tGetChunks\x12\x1a.chunk.v1.GetChunksRequest\x1a\x1b.chunk.v1.GetChunksResponse\"\x00\x12^\n" +
	"\x11GetChunksInRadius\x12\".chunk.v1.GetChunksInRadiusRequest\x1a#.chunk.v1.GetChunksInRadiusResponse\"\x00B1Z/github.com/VoidMesh/platform/api/proto/chunk/v1b\x06proto3"

var (
	file_chunk_v1_chunk_proto_rawDescOnce sync.Once
	file_chunk_v1_chunk_proto_rawDescData []byte
)

func file_chunk_v1_chunk_proto_rawDescGZIP() []byte {
	file_chunk_v1_chunk_proto_rawDescOnce.Do(func() {
		file_chunk_v1_chunk_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chunk_v1_chunk_proto_rawDesc), len(file_chunk_v1_chunk_proto_rawDesc)))
	})
	return file_chunk_v1_chunk_proto_rawDescData
}

var file_chunk_v1_chunk_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chunk_v1_chunk_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_chunk_v1_chunk_proto_goTypes = []any{
	(TerrainType)(0),                  // 0: chunk.v1.TerrainType
	(*TerrainCell)(nil),               // 1: chunk.v1.TerrainCell
	(*ChunkData)(nil),                 // 2: chunk.v1.ChunkData
	(*ChunkCoordinate)(nil),           // 3: chunk.v1.ChunkCoordinate
	(*GetChunkRequest)(nil),           // 4: chunk.v1.GetChunkRequest
	(*GetChunkResponse)(nil),          // 5: chunk.v1.GetChunkResponse
	(*GetChunksRequest)(nil),          // 6: chunk.v1.GetChunksRequest
	(*GetChunksResponse)(nil),         // 7: chunk.v1.GetChunksResponse
	(*GetChunksInRadiusRequest)(nil),  // 8: chunk.v1.GetChunksInRadiusRequest
	(*GetChunksInRadiusResponse)(nil), // 9: chunk.v1.GetChunksInRadiusResponse
	(*timestamppb.Timestamp)(nil),     // 10: google.protobuf.Timestamp
}
var file_chunk_v1_chunk_proto_depIdxs = []int32{
	0,  // 0: chunk.v1.TerrainCell.terrain_type:type_name -> chunk.v1.TerrainType
	1,  // 1: chunk.v1.ChunkData.cells:type_name -> chunk.v1.TerrainCell
	10, // 2: chunk.v1.ChunkData.generated_at:type_name -> google.protobuf.Timestamp
	2,  // 3: chunk.v1.GetChunkResponse.chunk:type_name -> chunk.v1.ChunkData
	2,  // 4: chunk.v1.GetChunksResponse.chunks:type_name -> chunk.v1.ChunkData
	2,  // 5: chunk.v1.GetChunksInRadiusResponse.chunks:type_name -> chunk.v1.ChunkData
	4,  // 6: chunk.v1.ChunkService.GetChunk:input_type -> chunk.v1.GetChunkRequest
	6,  // 7: chunk.v1.ChunkService.GetChunks:input_type -> chunk.v1.GetChunksRequest
	8,  // 8: chunk.v1.ChunkService.GetChunksInRadius:input_type -> chunk.v1.GetChunksInRadiusRequest
	5,  // 9: chunk.v1.ChunkService.GetChunk:output_type -> chunk.v1.GetChunkResponse
	7,  // 10: chunk.v1.ChunkService.GetChunks:output_type -> chunk.v1.GetChunksResponse
	9,  // 11: chunk.v1.ChunkService.GetChunksInRadius:output_type -> chunk.v1.GetChunksInRadiusResponse
	9,  // [9:12] is the sub-list for method output_type
	6,  // [6:9] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_chunk_v1_chunk_proto_init() }
func file_chunk_v1_chunk_proto_init() {
	if File_chunk_v1_chunk_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chunk_v1_chunk_proto_rawDesc), len(file_chunk_v1_chunk_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chunk_v1_chunk_proto_goTypes,
		DependencyIndexes: file_chunk_v1_chunk_proto_depIdxs,
		EnumInfos:         file_chunk_v1_chunk_proto_enumTypes,
		MessageInfos:      file_chunk_v1_chunk_proto_msgTypes,
	}.Build()
	File_chunk_v1_chunk_proto = out.File
	file_chunk_v1_chunk_proto_goTypes = nil
	file_chunk_v1_chunk_proto_depIdxs = nil
}
