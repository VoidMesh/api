# This file is for local development only
# Please use the image generated by the Dockerfile for production
services:
  # This service is used to build the development image
  # As we are using "depends_on: development" in other services, this service will be built first
  # This way, the image is built once and reused by other services
  development-web:
    image: meower:development-web
    pull_policy: never
    build:
      context: .
      dockerfile: ./web/Dockerfile
      target: development-web

  development-api:
    image: meower:development-api
    pull_policy: never
    build:
      context: .
      dockerfile: ./api/Dockerfile
      target: development-api

  web:
    image: meower:development-web
    pull_policy: never
    tty: true
    stop_signal: SIGINT # Graceful shutdown will cleanup the txt files created
    stop_grace_period: 3s
    restart: unless-stopped
    environment:
      API_ENDPOINT: "api:50051"
      COOKIE_SECRET_KEY: "5TIyDD81Laz/xdxEw2yJVPKdJYyPqxmyONaSVJHs6jY="
      JWT_SECRET: "NOz2sZGgFo52Np3AZ4XJAkY9FH5GP7Yzye1ZSnNYRqc="
    ports:
      - "3000:3000"
      - "7331:7331"
    working_dir: /src/web/
    volumes:
      - ./web/:/src/web/
      - ./api/:/src/api/
      - go_modules:/go/pkg/mod/
      - web_sessions:/src/web/data/
    depends_on:
      - api
      - tailwind
      - development-web
    command: 'templ generate -v --watch --proxy="http://localhost:3000" --proxybind="0.0.0.0" --open-browser=false --cmd="go run main.go"'

  tailwind:
    image: meower:development-web
    pull_policy: never
    restart: unless-stopped
    stop_signal: SIGKILL
    working_dir: /src/web/
    volumes:
      - ./web/:/src/web/
      - node_modules:/src/node_modules/
    depends_on:
      - development-web
    command:
      [
        "/usr/local/bin/tailwindcss",
        "-i",
        "/src/web/static/src/css/main.css",
        "-o",
        "/src/web/static/public/css/main.css",
        "--watch=always",
        "--content",
        "/src/web/views/**/*.templ",
        "/src/web/static/src/css/**.css",
      ]

  api:
    image: meower:development-api
    pull_policy: never
    tty: true
    restart: unless-stopped
    environment:
      LOG_LEVEL: "debug"
      DATABASE_URL: "postgres://meower:meower@db:5432/meower?sslmode=disable"
      JWT_SECRET: "NOz2sZGgFo52Np3AZ4XJAkY9FH5GP7Yzye1ZSnNYRqc="
    ports:
      - "50051:50051"
    working_dir: /src/api/
    volumes:
      - ./api/:/src/api/
      - go_modules:/go/pkg/mod/
      - node_modules:/src/node_modules/
    healthcheck:
      test: ["CMD", "grpc-health-probe", "-addr=:50051"]
      interval: 1s
      timeout: 10s
      retries: 10
    depends_on:
      development-api:
        condition: service_started
      db:
        condition: service_healthy
        restart: true
    command: "wgo -file=.go go run main.go"

  proto:
    image: meower:development-api
    pull_policy: never
    restart: unless-stopped
    working_dir: /src/
    volumes:
      - ./api/:/src/api/
      - ./scripts/:/src/scripts/
    depends_on:
      - development-api
    command: "wgo -dir ./api/proto -file=.proto ./scripts/generate_protobuf.sh"

  grpcui:
    image: fullstorydev/grpcui:v1.4.3
    ports:
      - "50050:8080"
    depends_on:
      api:
        condition: service_healthy
        restart: true
    command: -plaintext api:50051

  sqlc:
    image: meower:development-api
    pull_policy: never
    tty: true
    restart: unless-stopped
    working_dir: /src/api/db/
    volumes:
      - ./api/db/:/src/api/db/
      - go_modules:/go/pkg/mod/
      - node_modules:/src/node_modules/
    depends_on:
      - development-api
    command: "wgo -file=sqlc.yaml -file=.sql -xfile=.go -dir /src/api/db sqlc generate -f /src/api/db/sqlc.yaml"

  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_USER: "meower"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U meower"]
      interval: 1s
      timeout: 10s
      retries: 10
    volumes:
      - ./api/db/migrations/schema.sql:/docker-entrypoint-initdb.d/schema.sql

  pgweb:
    image: sosedoff/pgweb
    ports:
      - "5430:8081"
    environment:
      PGWEB_DATABASE_URL: "postgres://meower:meower@db:5432/meower?sslmode=disable"
    depends_on:
      db:
        condition: service_healthy
        restart: true
    command: "--log-level=ERROR"

  mailpit:
    image: axllent/mailpit
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

volumes:
  go_modules:
  node_modules:
  web_sessions:
